Fluxo de Validação de Apólice
Passo 1: Recebimento da Solicitação
Ação: Um cliente chama a sua API REST para criar uma nova apólice.

Estado da Apólice: O status inicial é definido como RECEBIDO.

O que o seu código faz: Salva a solicitação no banco de dados.
___________________________________________

Passo 2: Validação de Risco (Síncrona)
Ação: Seu microsserviço faz uma chamada síncrona para a API de Fraude (o mock que você irá configurar).

O que o seu código faz:

Usa a resposta da API de Fraude para obter a classificação de risco do cliente.

Aplica as regras de negócio para validar o capital segurado com base nessa classificação.

Transição de Estado:

Se a validação for bem-sucedida, o status da apólice muda para VALIDADO.

Se a validação falhar, o status muda para REJEITADO.
___________________________________________

Passo 3: Transição para PENDENTE (Interna)
Ação: Se o status for VALIDADO, seu serviço o altera automaticamente para PENDENTE.

Significado: Este estado indica que o processo de aprovação agora depende de
eventos externos (pagamento e subscrição).

___________________________________________

Passo 4: Publicação de Eventos (Assíncrona)
Ação: Em cada transição de estado (RECEBIDO -> VALIDADO, VALIDADO -> PENDENTE, etc.),
 seu microsserviço atua como um publicador de eventos.

O que o seu código faz: Envia uma nova mensagem para o tópico do Kafka (Orders Topic).
Essa mensagem deve conter o ID da apólice e o novo status.

___________________________________________

Passo 5: Consumo de Eventos (Simulado)
Ação: Seu microsserviço deve ter um componente consumidor que fica "ouvindo" o
mesmo tópico do Kafka (Orders Topic) para receber eventos externos que você simulará.

O que o seu código faz:

Você usará uma ferramenta externa (como Postman ou um script) para publicar
mensagens simulando a confirmação de pagamento ou a autorização de subscrição.

Quando seu consumidor receber essas mensagens, ele buscará a apólice no
banco de dados usando o ID e validará as informações.

___________________________________________

Passo 6: Conclusão do Processo
Transição de Estado:

Quando seu serviço receber ambos os eventos simulados (pagamento e subscrição),
ele altera o status de PENDENTE para APROVADO.

Se receber um evento de negação de pagamento ou subscrição, o status é alterado para REJEITADO.

O que o seu código faz: Publica o último evento no tópico do Kafka, concluindo o fluxo.

Este fluxo demonstra a sua capacidade de lidar com transições de
estado tanto de forma síncrona (validação com a API de fraude)
quanto de forma assíncrona (reação a eventos externos simulados),
 o que é a essência da arquitetura orientada a eventos.






